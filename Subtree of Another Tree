# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSubtree(self, root: Optional[TreeNode], subRoot: Optional[TreeNode]) -> bool:
        r=self.traverse(root)
        sr=self.traverse(subRoot)
        if  sr in r:
            return True
        return False
    def traverse(self,x):
        if x:
            return f'#{x.val} {self.traverse(x.left)} {self.traverse(x.right)}'
        return None
        
